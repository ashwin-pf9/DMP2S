syntax = "proto3";

package grpc;

option go_package = "./;clipb";


service AuthService {
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Register(RegisterRequest) returns (RegisterResponse);
}

message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string user_id = 1;
    string user_name = 2;
    string token = 3;
}

message RegisterRequest {
    string name = 1;
    string email = 2;
    string password = 3;
    int32 role_id = 4;
}

message RegisterResponse {
    string user_id = 1;
    string email = 2;
    bool success = 3; 
}

service CRUDPipelineService {
    rpc GetUserPipelines(GetPipelinesRequest) returns (GetPipelinesResponse);
    rpc CreatePipeline(CreatePipelineRequest) returns (CreatePipelineResponse);
    rpc GetPipelineStages(GetPipelineStagesRequest) returns (GetPipelineStagesResponse);
}

message Pipeline {
    string id = 1;
    string user_id = 2;
    string name = 3;
}

message Stage {
    string id = 1;
    string pipeline_id = 2;
    string name = 3;
}


message GetPipelinesRequest {
    string user_id = 1;
}

message GetPipelinesResponse {
    repeated Pipeline pipelines = 1;  
}


message CreatePipelineRequest {
    string user_id = 1;
    string name = 2;
}

message CreatePipelineResponse {
    Pipeline pipeline = 1;
    bool success = 2;
}


message GetPipelineStagesRequest {
    string pipeline_id = 1;
}

message GetPipelineStagesResponse {
    repeated Stage stages = 1;  
}


service PipelineOrchestratorService {
    rpc ExecutePipeline(ExecutePipelineRequest) returns (ExecutePipelineResponse);
}

message ExecutePipelineRequest {
    string pipeline_id = 1;
}

message ExecutePipelineResponse {
    string execution_id = 1;
    bool success = 2;  
}


/* protoc --proto_path=internal/core/services/pipelineservice/proto \
--go_out=internal/core/services/pipelineservice/proto \
--go-grpc_out=internal/core/services/pipelineservice/proto \
--go_opt=paths=source_relative \
--go-grpc_opt=paths=source_relative \
internal/core/services/pipelineservice/proto/pipeline.proto */